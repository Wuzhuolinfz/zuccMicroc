// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c
// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 25 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | SELFTIMES
  | SELFDIV
  | SELFMOD
  | ADDONE
  | MINUSONE
  | CHAR
  | ELSE
  | IF
  | INT
  | FLOAT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | STRING
  | BREAK
  | CONTINUE
  | DOWHILE
  | DO
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTCHAR of (char)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_SELFTIMES
    | TOKEN_SELFDIV
    | TOKEN_SELFMOD
    | TOKEN_ADDONE
    | TOKEN_MINUSONE
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_STRING
    | TOKEN_BREAK
    | TOKEN_CONTINUE
    | TOKEN_DOWHILE
    | TOKEN_DO
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTCHAR
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssignment
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_ConstString
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_ConstChar
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | SELFPLUS  -> 25 
  | SELFMINUS  -> 26 
  | SELFTIMES  -> 27 
  | SELFDIV  -> 28 
  | SELFMOD  -> 29 
  | ADDONE  -> 30 
  | MINUSONE  -> 31 
  | CHAR  -> 32 
  | ELSE  -> 33 
  | IF  -> 34 
  | INT  -> 35 
  | FLOAT  -> 36 
  | NULL  -> 37 
  | PRINT  -> 38 
  | PRINTLN  -> 39 
  | RETURN  -> 40 
  | VOID  -> 41 
  | WHILE  -> 42 
  | FOR  -> 43 
  | STRING  -> 44 
  | BREAK  -> 45 
  | CONTINUE  -> 46 
  | DOWHILE  -> 47 
  | DO  -> 48 
  | CSTSTRING _ -> 49 
  | NAME _ -> 50 
  | CSTCHAR _ -> 51 
  | CSTFLOAT _ -> 52 
  | CSTINT _ -> 53 
  | CSTBOOL _ -> 54 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_SELFPLUS 
  | 26 -> TOKEN_SELFMINUS 
  | 27 -> TOKEN_SELFTIMES 
  | 28 -> TOKEN_SELFDIV 
  | 29 -> TOKEN_SELFMOD 
  | 30 -> TOKEN_ADDONE 
  | 31 -> TOKEN_MINUSONE 
  | 32 -> TOKEN_CHAR 
  | 33 -> TOKEN_ELSE 
  | 34 -> TOKEN_IF 
  | 35 -> TOKEN_INT 
  | 36 -> TOKEN_FLOAT 
  | 37 -> TOKEN_NULL 
  | 38 -> TOKEN_PRINT 
  | 39 -> TOKEN_PRINTLN 
  | 40 -> TOKEN_RETURN 
  | 41 -> TOKEN_VOID 
  | 42 -> TOKEN_WHILE 
  | 43 -> TOKEN_FOR 
  | 44 -> TOKEN_STRING 
  | 45 -> TOKEN_BREAK 
  | 46 -> TOKEN_CONTINUE 
  | 47 -> TOKEN_DOWHILE 
  | 48 -> TOKEN_DO 
  | 49 -> TOKEN_CSTSTRING 
  | 50 -> TOKEN_NAME 
  | 51 -> TOKEN_CSTCHAR 
  | 52 -> TOKEN_CSTFLOAT 
  | 53 -> TOKEN_CSTINT 
  | 54 -> TOKEN_CSTBOOL 
  | 57 -> TOKEN_end_of_input
  | 55 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssignment 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_AtExprNotAccess 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Access 
    | 86 -> NONTERM_Exprs 
    | 87 -> NONTERM_Exprs 
    | 88 -> NONTERM_Exprs1 
    | 89 -> NONTERM_Exprs1 
    | 90 -> NONTERM_ConstString 
    | 91 -> NONTERM_Const 
    | 92 -> NONTERM_Const 
    | 93 -> NONTERM_Const 
    | 94 -> NONTERM_Const 
    | 95 -> NONTERM_ConstFloat 
    | 96 -> NONTERM_ConstFloat 
    | 97 -> NONTERM_ConstChar 
    | 98 -> NONTERM_Type 
    | 99 -> NONTERM_Type 
    | 100 -> NONTERM_Type 
    | 101 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 57 
let _fsyacc_tagOfErrorTerminal = 55

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | SELFTIMES  -> "SELFTIMES" 
  | SELFDIV  -> "SELFDIV" 
  | SELFMOD  -> "SELFMOD" 
  | ADDONE  -> "ADDONE" 
  | MINUSONE  -> "MINUSONE" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | STRING  -> "STRING" 
  | BREAK  -> "BREAK" 
  | CONTINUE  -> "CONTINUE" 
  | DOWHILE  -> "DOWHILE" 
  | DO  -> "DO" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | SELFTIMES  -> (null : System.Object) 
  | SELFDIV  -> (null : System.Object) 
  | SELFMOD  -> (null : System.Object) 
  | ADDONE  -> (null : System.Object) 
  | MINUSONE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 14us; 65535us; 33us; 34us; 37us; 38us; 43us; 74us; 46us; 74us; 49us; 74us; 52us; 74us; 67us; 74us; 81us; 74us; 82us; 74us; 84us; 74us; 85us; 74us; 93us; 74us; 94us; 74us; 103us; 74us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 82us; 106us; 12us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 67us; 68us; 81us; 83us; 82us; 55us; 84us; 86us; 85us; 86us; 93us; 95us; 94us; 95us; 103us; 104us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 82us; 56us; 85us; 105us; 94us; 107us; 51us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 67us; 57us; 70us; 71us; 77us; 80us; 78us; 79us; 81us; 57us; 82us; 57us; 84us; 57us; 85us; 57us; 89us; 92us; 90us; 91us; 93us; 57us; 94us; 57us; 97us; 98us; 99us; 100us; 101us; 102us; 103us; 57us; 113us; 114us; 116us; 162us; 119us; 120us; 121us; 122us; 123us; 159us; 125us; 126us; 134us; 135us; 136us; 137us; 138us; 139us; 140us; 141us; 142us; 143us; 165us; 145us; 166us; 146us; 167us; 147us; 168us; 148us; 169us; 149us; 170us; 150us; 171us; 151us; 172us; 152us; 173us; 153us; 174us; 154us; 175us; 155us; 176us; 156us; 177us; 157us; 178us; 158us; 179us; 160us; 182us; 159us; 195us; 161us; 198us; 162us; 51us; 65535us; 16us; 110us; 43us; 110us; 46us; 110us; 49us; 110us; 52us; 110us; 59us; 110us; 67us; 110us; 70us; 110us; 77us; 110us; 78us; 110us; 81us; 110us; 82us; 110us; 84us; 110us; 85us; 110us; 89us; 110us; 90us; 110us; 93us; 110us; 94us; 110us; 97us; 110us; 99us; 110us; 101us; 110us; 103us; 110us; 113us; 110us; 116us; 110us; 119us; 110us; 121us; 110us; 123us; 111us; 125us; 110us; 134us; 110us; 136us; 110us; 138us; 110us; 140us; 110us; 142us; 110us; 165us; 110us; 166us; 110us; 167us; 110us; 168us; 110us; 169us; 110us; 170us; 110us; 171us; 110us; 172us; 110us; 173us; 110us; 174us; 110us; 175us; 110us; 176us; 110us; 177us; 110us; 178us; 110us; 179us; 110us; 182us; 111us; 195us; 110us; 198us; 110us; 52us; 65535us; 16us; 112us; 43us; 112us; 46us; 112us; 49us; 112us; 52us; 112us; 59us; 112us; 67us; 112us; 70us; 112us; 77us; 112us; 78us; 112us; 81us; 112us; 82us; 112us; 84us; 112us; 85us; 112us; 89us; 112us; 90us; 112us; 93us; 112us; 94us; 112us; 97us; 112us; 99us; 112us; 101us; 112us; 103us; 112us; 113us; 112us; 116us; 112us; 119us; 112us; 121us; 112us; 123us; 112us; 125us; 112us; 134us; 112us; 136us; 112us; 138us; 112us; 140us; 112us; 142us; 112us; 165us; 112us; 166us; 112us; 167us; 112us; 168us; 112us; 169us; 112us; 170us; 112us; 171us; 112us; 172us; 112us; 173us; 112us; 174us; 112us; 175us; 112us; 176us; 112us; 177us; 112us; 178us; 112us; 179us; 112us; 182us; 112us; 192us; 194us; 195us; 112us; 198us; 112us; 56us; 65535us; 16us; 109us; 43us; 109us; 46us; 109us; 49us; 109us; 52us; 109us; 59us; 109us; 67us; 109us; 70us; 109us; 77us; 109us; 78us; 109us; 81us; 109us; 82us; 109us; 84us; 109us; 85us; 109us; 89us; 109us; 90us; 109us; 93us; 109us; 94us; 109us; 97us; 109us; 99us; 109us; 101us; 109us; 103us; 109us; 113us; 109us; 116us; 109us; 119us; 109us; 121us; 109us; 123us; 108us; 125us; 109us; 130us; 131us; 132us; 133us; 134us; 109us; 136us; 109us; 138us; 109us; 140us; 109us; 142us; 109us; 165us; 109us; 166us; 109us; 167us; 109us; 168us; 109us; 169us; 109us; 170us; 109us; 171us; 109us; 172us; 109us; 173us; 109us; 174us; 109us; 175us; 109us; 176us; 109us; 177us; 109us; 178us; 109us; 179us; 109us; 182us; 108us; 186us; 187us; 189us; 190us; 192us; 193us; 195us; 109us; 198us; 109us; 1us; 65535us; 116us; 117us; 2us; 65535us; 116us; 197us; 198us; 199us; 52us; 65535us; 16us; 185us; 43us; 185us; 46us; 185us; 49us; 185us; 52us; 185us; 59us; 185us; 67us; 185us; 70us; 185us; 77us; 185us; 78us; 185us; 81us; 185us; 82us; 185us; 84us; 185us; 85us; 185us; 89us; 185us; 90us; 185us; 93us; 185us; 94us; 185us; 97us; 185us; 99us; 185us; 101us; 185us; 103us; 185us; 113us; 185us; 116us; 185us; 119us; 185us; 121us; 185us; 123us; 185us; 125us; 185us; 134us; 185us; 136us; 185us; 138us; 185us; 140us; 185us; 142us; 185us; 165us; 185us; 166us; 185us; 167us; 185us; 168us; 185us; 169us; 185us; 170us; 185us; 171us; 185us; 172us; 185us; 173us; 185us; 174us; 185us; 175us; 185us; 176us; 185us; 177us; 185us; 178us; 185us; 179us; 185us; 182us; 185us; 192us; 185us; 195us; 185us; 198us; 185us; 52us; 65535us; 16us; 180us; 43us; 180us; 46us; 180us; 49us; 180us; 52us; 180us; 59us; 180us; 67us; 180us; 70us; 180us; 77us; 180us; 78us; 180us; 81us; 180us; 82us; 180us; 84us; 180us; 85us; 180us; 89us; 180us; 90us; 180us; 93us; 180us; 94us; 180us; 97us; 180us; 99us; 180us; 101us; 180us; 103us; 180us; 113us; 180us; 116us; 180us; 119us; 180us; 121us; 180us; 123us; 180us; 125us; 180us; 134us; 180us; 136us; 180us; 138us; 180us; 140us; 180us; 142us; 180us; 165us; 180us; 166us; 180us; 167us; 180us; 168us; 180us; 169us; 180us; 170us; 180us; 171us; 180us; 172us; 180us; 173us; 180us; 174us; 180us; 175us; 180us; 176us; 180us; 177us; 180us; 178us; 180us; 179us; 180us; 182us; 180us; 192us; 180us; 195us; 180us; 198us; 180us; 52us; 65535us; 16us; 181us; 43us; 181us; 46us; 181us; 49us; 181us; 52us; 181us; 59us; 181us; 67us; 181us; 70us; 181us; 77us; 181us; 78us; 181us; 81us; 181us; 82us; 181us; 84us; 181us; 85us; 181us; 89us; 181us; 90us; 181us; 93us; 181us; 94us; 181us; 97us; 181us; 99us; 181us; 101us; 181us; 103us; 181us; 113us; 181us; 116us; 181us; 119us; 181us; 121us; 181us; 123us; 181us; 125us; 181us; 134us; 181us; 136us; 181us; 138us; 181us; 140us; 181us; 142us; 181us; 165us; 181us; 166us; 181us; 167us; 181us; 168us; 181us; 169us; 181us; 170us; 181us; 171us; 181us; 172us; 181us; 173us; 181us; 174us; 181us; 175us; 181us; 176us; 181us; 177us; 181us; 178us; 181us; 179us; 181us; 182us; 181us; 192us; 181us; 195us; 181us; 198us; 181us; 52us; 65535us; 16us; 184us; 43us; 184us; 46us; 184us; 49us; 184us; 52us; 184us; 59us; 184us; 67us; 184us; 70us; 184us; 77us; 184us; 78us; 184us; 81us; 184us; 82us; 184us; 84us; 184us; 85us; 184us; 89us; 184us; 90us; 184us; 93us; 184us; 94us; 184us; 97us; 184us; 99us; 184us; 101us; 184us; 103us; 184us; 113us; 184us; 116us; 184us; 119us; 184us; 121us; 184us; 123us; 184us; 125us; 184us; 134us; 184us; 136us; 184us; 138us; 184us; 140us; 184us; 142us; 184us; 165us; 184us; 166us; 184us; 167us; 184us; 168us; 184us; 169us; 184us; 170us; 184us; 171us; 184us; 172us; 184us; 173us; 184us; 174us; 184us; 175us; 184us; 176us; 184us; 177us; 184us; 178us; 184us; 179us; 184us; 182us; 184us; 192us; 184us; 195us; 184us; 198us; 184us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 57us; 62us; 68us; 81us; 89us; 141us; 193us; 246us; 303us; 305us; 308us; 361us; 414us; 467us; 520us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 16us; 8us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 34us; 37us; 1us; 26us; 16us; 27us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 16us; 29us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 16us; 32us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 34us; 3us; 34us; 37us; 38us; 1us; 34us; 3us; 34us; 37us; 38us; 18us; 34us; 37us; 38us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 34us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 34us; 3us; 34us; 37us; 38us; 1us; 34us; 1us; 34us; 2us; 34us; 37us; 1us; 34us; 1us; 35us; 2us; 35us; 39us; 1us; 35us; 2us; 35us; 39us; 17us; 35us; 39us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 35us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 35us; 2us; 35us; 39us; 1us; 35us; 1us; 36us; 1us; 36us; 16us; 36us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 36us; 16us; 36us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 36us; 16us; 36us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 11us; 40us; 43us; 48us; 49us; 52us; 53us; 54us; 55us; 56us; 82us; 85us; 10us; 40us; 43us; 48us; 49us; 52us; 53us; 54us; 55us; 56us; 85us; 1us; 41us; 2us; 41us; 77us; 1us; 42us; 1us; 43us; 16us; 43us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 2us; 44us; 81us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 16us; 45us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 2us; 46us; 47us; 16us; 46us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 3us; 47us; 77us; 82us; 2us; 47us; 90us; 1us; 47us; 16us; 47us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 2us; 50us; 85us; 1us; 51us; 2us; 51us; 85us; 1us; 52us; 16us; 52us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 53us; 16us; 53us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 54us; 16us; 54us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 55us; 16us; 55us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 56us; 16us; 56us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 1us; 57us; 16us; 58us; 59us; 60us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 15us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 74us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 85us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 88us; 89us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 2us; 77us; 82us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 2us; 80us; 85us; 1us; 81us; 1us; 82us; 2us; 82us; 85us; 1us; 82us; 2us; 83us; 84us; 2us; 83us; 85us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 87us; 1us; 89us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 2us; 93us; 96us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 59us; 61us; 64us; 66us; 70us; 72us; 76us; 78us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 140us; 144us; 146us; 163us; 165us; 168us; 170us; 187us; 189us; 191us; 193us; 195us; 197us; 199us; 201us; 203us; 205us; 222us; 224us; 226us; 228us; 230us; 234us; 236us; 240us; 259us; 276us; 278us; 282us; 284us; 286us; 289us; 291us; 293us; 296us; 298us; 301us; 319us; 336us; 338us; 341us; 343us; 345us; 347us; 364us; 366us; 383us; 385us; 402us; 404us; 406us; 408us; 410us; 412us; 424us; 435us; 437us; 440us; 442us; 444us; 461us; 464us; 466us; 468us; 470us; 472us; 489us; 492us; 509us; 513us; 516us; 518us; 535us; 537us; 539us; 541us; 543us; 546us; 548us; 551us; 553us; 570us; 572us; 589us; 591us; 608us; 610us; 627us; 629us; 646us; 648us; 665us; 682us; 699us; 716us; 733us; 750us; 767us; 784us; 801us; 818us; 835us; 852us; 869us; 886us; 902us; 919us; 936us; 954us; 956us; 958us; 960us; 962us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 995us; 997us; 999us; 1001us; 1003us; 1006us; 1008us; 1010us; 1013us; 1015us; 1018us; 1021us; 1023us; 1025us; 1027us; 1029us; 1031us; 1033us; 1035us; 1037us; 1039us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; |]
let _fsyacc_action_rows = 213
let _fsyacc_actionTableElements = [|5us; 16386us; 32us; 210us; 35us; 209us; 36us; 212us; 41us; 29us; 44us; 211us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 5us; 16386us; 32us; 210us; 35us; 209us; 36us; 212us; 41us; 29us; 44us; 211us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 22us; 20us; 50us; 18us; 3us; 32768us; 1us; 22us; 22us; 20us; 50us; 18us; 3us; 32768us; 1us; 22us; 22us; 20us; 50us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 15us; 16392us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 22us; 20us; 50us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 22us; 20us; 50us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 53us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 50us; 30us; 1us; 32768us; 1us; 31us; 4us; 16400us; 32us; 210us; 35us; 209us; 36us; 212us; 44us; 211us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 4us; 16400us; 32us; 210us; 35us; 209us; 36us; 212us; 44us; 211us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 4us; 32768us; 32us; 210us; 35us; 209us; 36us; 212us; 44us; 211us; 0us; 16403us; 30us; 16405us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 32us; 210us; 34us; 76us; 35us; 209us; 36us; 212us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 88us; 43us; 96us; 44us; 211us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 1us; 32768us; 4us; 45us; 0us; 16404us; 30us; 16405us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 32us; 210us; 34us; 76us; 35us; 209us; 36us; 212us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 88us; 43us; 96us; 44us; 211us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16406us; 1us; 32768us; 7us; 49us; 30us; 16405us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 32us; 210us; 34us; 76us; 35us; 209us; 36us; 212us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 88us; 43us; 96us; 44us; 211us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16407us; 1us; 32768us; 7us; 52us; 30us; 16405us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 32us; 210us; 34us; 76us; 35us; 209us; 36us; 212us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 88us; 43us; 96us; 44us; 211us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 33us; 85us; 0us; 16410us; 16us; 32768us; 7us; 58us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 0us; 16411us; 19us; 32768us; 1us; 182us; 7us; 60us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16412us; 16us; 32768us; 7us; 62us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 0us; 16413us; 1us; 32768us; 7us; 64us; 0us; 16414us; 1us; 32768us; 7us; 66us; 0us; 16415us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 75us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 87us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 1us; 32768us; 42us; 69us; 1us; 32768us; 1us; 70us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 16us; 32768us; 2us; 72us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 1us; 32768us; 7us; 73us; 0us; 16416us; 0us; 16417us; 1us; 32768us; 1us; 77us; 1us; 32768us; 1us; 78us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 16us; 32768us; 2us; 82us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 16us; 32768us; 2us; 81us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 75us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 87us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 76us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 88us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 1us; 32768us; 33us; 84us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 75us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 87us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 76us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 88us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16418us; 1us; 32768us; 1us; 89us; 1us; 32768us; 1us; 90us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 16us; 32768us; 2us; 94us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 16us; 32768us; 2us; 93us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 75us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 87us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 76us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 88us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16419us; 1us; 32768us; 1us; 97us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 16us; 32768us; 7us; 99us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 16us; 32768us; 7us; 101us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 16us; 32768us; 2us; 103us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 26us; 32768us; 1us; 182us; 3us; 43us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 34us; 75us; 37us; 205us; 38us; 121us; 39us; 144us; 40us; 59us; 42us; 87us; 43us; 96us; 45us; 63us; 46us; 65us; 48us; 67us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 10us; 16424us; 2us; 191us; 5us; 195us; 9us; 113us; 25us; 138us; 26us; 140us; 27us; 134us; 28us; 136us; 29us; 142us; 30us; 128us; 31us; 129us; 9us; 16424us; 5us; 195us; 9us; 113us; 25us; 138us; 26us; 140us; 27us; 134us; 28us; 136us; 29us; 142us; 30us; 128us; 31us; 129us; 0us; 16425us; 1us; 16425us; 2us; 183us; 0us; 16426us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 15us; 16427us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 1us; 16465us; 1us; 116us; 18us; 16470us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 1us; 32768us; 2us; 118us; 0us; 16428us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16429us; 18us; 32768us; 1us; 123us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 15us; 16430us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 124us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 1us; 16474us; 8us; 125us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 16us; 32768us; 2us; 127us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 3us; 32768us; 1us; 189us; 22us; 192us; 50us; 188us; 1us; 16434us; 5us; 195us; 3us; 32768us; 1us; 189us; 22us; 192us; 50us; 188us; 1us; 16435us; 5us; 195us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16436us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16437us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16438us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16439us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16440us; 0us; 16441us; 0us; 16444us; 0us; 16445us; 5us; 16446us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 5us; 16447us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 2us; 16448us; 25us; 163us; 26us; 164us; 2us; 16449us; 25us; 163us; 26us; 164us; 2us; 16450us; 25us; 163us; 26us; 164us; 11us; 16451us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 11us; 16452us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 11us; 16453us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 11us; 16454us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 11us; 16455us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 11us; 16456us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 13us; 16457us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 15us; 32768us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 14us; 16458us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 16us; 32768us; 6us; 196us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 16us; 16472us; 8us; 198us; 12us; 179us; 13us; 178us; 14us; 172us; 15us; 173us; 16us; 174us; 17us; 175us; 18us; 176us; 19us; 177us; 20us; 167us; 21us; 168us; 22us; 169us; 23us; 170us; 24us; 171us; 25us; 163us; 26us; 164us; 0us; 16442us; 0us; 16443us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16459us; 0us; 16460us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 3us; 32768us; 1us; 189us; 22us; 192us; 50us; 188us; 1us; 16464us; 5us; 195us; 0us; 16465us; 3us; 32768us; 1us; 189us; 22us; 192us; 50us; 188us; 2us; 32768us; 2us; 191us; 5us; 195us; 0us; 16466us; 11us; 32768us; 1us; 182us; 10us; 186us; 21us; 203us; 22us; 192us; 37us; 205us; 49us; 200us; 50us; 188us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 1us; 16467us; 5us; 195us; 0us; 16468us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16469us; 0us; 16471us; 18us; 32768us; 1us; 182us; 10us; 186us; 11us; 119us; 21us; 203us; 22us; 192us; 25us; 165us; 26us; 166us; 30us; 130us; 31us; 132us; 37us; 205us; 38us; 121us; 39us; 144us; 49us; 200us; 50us; 115us; 51us; 208us; 52us; 206us; 53us; 201us; 54us; 202us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 2us; 32768us; 52us; 207us; 53us; 204us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 6us; 7us; 9us; 10us; 16us; 17us; 19us; 20us; 21us; 23us; 24us; 28us; 32us; 36us; 39us; 41us; 60us; 76us; 77us; 79us; 83us; 85us; 89us; 92us; 93us; 96us; 97us; 99us; 100us; 102us; 104us; 109us; 111us; 113us; 114us; 119us; 121us; 123us; 124us; 125us; 127us; 132us; 133us; 164us; 166us; 167us; 198us; 199us; 201us; 232us; 233us; 235us; 266us; 267us; 268us; 270us; 271us; 288us; 289us; 309us; 310us; 327us; 328us; 330us; 331us; 333us; 334us; 361us; 363us; 365us; 384us; 401us; 403us; 404us; 405us; 407us; 409us; 428us; 447us; 464us; 481us; 508us; 535us; 537us; 564us; 591us; 592us; 594us; 596us; 615us; 634us; 651us; 668us; 695us; 722us; 723us; 725us; 744us; 761us; 780us; 797us; 816us; 833us; 860us; 861us; 862us; 863us; 864us; 875us; 885us; 886us; 888us; 889us; 908us; 924us; 926us; 945us; 947us; 948us; 967us; 968us; 987us; 1003us; 1022us; 1024us; 1043us; 1060us; 1061us; 1062us; 1063us; 1067us; 1069us; 1073us; 1075us; 1094us; 1095us; 1114us; 1115us; 1134us; 1135us; 1154us; 1155us; 1174us; 1175us; 1176us; 1177us; 1178us; 1184us; 1190us; 1193us; 1196us; 1199us; 1211us; 1223us; 1235us; 1247us; 1259us; 1271us; 1285us; 1301us; 1316us; 1333us; 1350us; 1351us; 1352us; 1371us; 1390us; 1409us; 1428us; 1447us; 1466us; 1485us; 1504us; 1523us; 1542us; 1561us; 1580us; 1599us; 1618us; 1637us; 1638us; 1639us; 1658us; 1659us; 1660us; 1661us; 1665us; 1667us; 1668us; 1672us; 1675us; 1676us; 1688us; 1690us; 1691us; 1710us; 1711us; 1712us; 1731us; 1732us; 1733us; 1734us; 1735us; 1738us; 1739us; 1740us; 1741us; 1742us; 1743us; 1744us; 1745us; 1746us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 2us; 2us; 7us; 1us; 7us; 5us; 9us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 6us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 22us; 22us; 23us; 23us; 24us; 25us; 25us; 25us; 25us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 16425us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 16432us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 16443us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16459us; 16460us; 65535us; 16461us; 16462us; 16463us; 65535us; 65535us; 16465us; 65535us; 65535us; 16466us; 65535us; 65535us; 16468us; 65535us; 16469us; 16471us; 65535us; 16473us; 16474us; 16475us; 16476us; 65535us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; 16484us; 16485us; |]
let _fsyacc_reductions ()  =    [| 
# 530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 539 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Prog _1 
                   )
# 50 "CPar.fsy"
                 : Absyn.program));
# 550 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               [] 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdecs));
# 560 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 572 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 60 "CPar.fsy"
                 : 'gentype_Topdec));
# 583 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _1 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               VardecAndAssignment (first _1, second _1 ,third _1)  
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 605 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 80 "CPar.fsy"
                 : 'gentype_Vardec));
# 617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "CPar.fsy"
                                                     ((fst _2) _1, snd _2 , _4) 
                   )
# 89 "CPar.fsy"
                 : 'gentype_VardecAndAssignment));
# 630 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardesc));
# 641 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 652 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               _2                                      
                   )
# 104 "CPar.fsy"
                 : 'gentype_Vardesc));
# 663 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 106 "CPar.fsy"
                 : 'gentype_Vardesc));
# 674 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 108 "CPar.fsy"
                 : 'gentype_Vardesc));
# 686 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Fundec));
# 699 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 115 "CPar.fsy"
                 : 'gentype_Fundec));
# 713 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               [] 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 723 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               _1 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 734 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [_1]     
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 745 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 757 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Block _2 
                   )
# 131 "CPar.fsy"
                 : 'gentype_Block));
# 768 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               [] 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 778 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 790 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 802 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                                  DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 814 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               _1 
                   )
# 142 "CPar.fsy"
                 : 'gentype_Stmt));
# 825 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               _1 
                   )
# 143 "CPar.fsy"
                 : 'gentype_Stmt));
# 836 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 847 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Myctrl (Return None)          
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 857 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Myctrl(Return(Some(_2)))     
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 868 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               Myctrl Break         
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 878 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               Myctrl Continue      
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 888 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 900 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               _1                   
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 911 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 924 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 936 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                        For(_3,_5,_7,_9)  
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 950 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 963 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtU));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtU));
# 987 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Access _1           
                   )
# 166 "CPar.fsy"
                 : 'gentype_Expr));
# 998 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               _1                  
                   )
# 167 "CPar.fsy"
                 : 'gentype_Expr));
# 1009 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               _1                  
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1020 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1032 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1044 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1055 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1066 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Print(_3 , _5)      
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               SimpleOpt("Z++", _1, CstI 1 )   
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1089 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               SimpleOpt("Z--", _1, CstI 1 )   
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1100 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               SimpleOpt("++Z", _2, CstI 1 )   
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               SimpleOpt("--Z", _2, CstI 1 )   
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               SimpleOpt("*=", _1, _3 ) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1134 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               SimpleOpt("/=", _1, _3 ) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1146 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               SimpleOpt("+=", _1, _3 ) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1158 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               SimpleOpt("-=", _1, _3 ) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1170 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               SimpleOpt("%=", _1, _3 ) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1182 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1192 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim1("W++", _1)     
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1203 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim1("W--", _1)     
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1214 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim1("++W", _2)     
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1225 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim1("--W", _2)     
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1236 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1248 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1260 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1272 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1284 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1296 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1308 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1320 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1332 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1344 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1356 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1368 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1380 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               CstI _1             
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               ConstFloat(_1)      
                   )
# 212 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1414 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               _2                  
                   )
# 213 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1425 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               ConstChar (_1)      
                   )
# 214 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1436 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               ConstString(_1)     
                   )
# 215 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1447 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Addr _2             
                   )
# 216 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1458 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               AccVar _1           
                   )
# 220 "CPar.fsy"
                 : 'gentype_Access));
# 1469 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               _2                  
                   )
# 221 "CPar.fsy"
                 : 'gentype_Access));
# 1480 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 222 "CPar.fsy"
                 : 'gentype_Access));
# 1491 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 223 "CPar.fsy"
                 : 'gentype_Access));
# 1502 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 224 "CPar.fsy"
                 : 'gentype_Access));
# 1514 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               []       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Exprs));
# 1524 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               _1       
                   )
# 229 "CPar.fsy"
                 : 'gentype_Exprs));
# 1535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               [_1]     
                   )
# 233 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 234 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1558 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               _1       
                   )
# 238 "CPar.fsy"
                 : 'gentype_ConstString));
# 1569 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               _1       
                   )
# 242 "CPar.fsy"
                 : 'gentype_Const));
# 1580 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               _1       
                   )
# 243 "CPar.fsy"
                 : 'gentype_Const));
# 1591 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               - _2     
                   )
# 244 "CPar.fsy"
                 : 'gentype_Const));
# 1602 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               -1       
                   )
# 245 "CPar.fsy"
                 : 'gentype_Const));
# 1612 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               _1       
                   )
# 249 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1623 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               - _2     
                   )
# 250 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1634 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               _1       
                   )
# 254 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1645 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               TypI     
                   )
# 257 "CPar.fsy"
                 : 'gentype_Type));
# 1655 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CPar.fsy"
                                                               TypC     
                   )
# 258 "CPar.fsy"
                 : 'gentype_Type));
# 1665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "CPar.fsy"
                                                               TypS     
                   )
# 259 "CPar.fsy"
                 : 'gentype_Type));
# 1675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "CPar.fsy"
                                                               TypeFloat    
                   )
# 260 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1686 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 58;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
