// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c
// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 25 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | SELFTIMES
  | SELFDIV
  | SELFMOD
  | ADDONE
  | MINUSONE
  | QUESTION
  | COLON
  | CHAR
  | ELSE
  | IF
  | INT
  | FLOAT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | STRING
  | BREAK
  | CONTINUE
  | DOWHILE
  | DO
  | CASE
  | SWITCH
  | DEFAULT
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTCHAR of (char)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_SELFTIMES
    | TOKEN_SELFDIV
    | TOKEN_SELFMOD
    | TOKEN_ADDONE
    | TOKEN_MINUSONE
    | TOKEN_QUESTION
    | TOKEN_COLON
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_STRING
    | TOKEN_BREAK
    | TOKEN_CONTINUE
    | TOKEN_DOWHILE
    | TOKEN_DO
    | TOKEN_CASE
    | TOKEN_SWITCH
    | TOKEN_DEFAULT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTCHAR
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssignment
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_StmtCase
    | NONTERM_Exprs1
    | NONTERM_ConstString
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_ConstChar
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | SELFPLUS  -> 25 
  | SELFMINUS  -> 26 
  | SELFTIMES  -> 27 
  | SELFDIV  -> 28 
  | SELFMOD  -> 29 
  | ADDONE  -> 30 
  | MINUSONE  -> 31 
  | QUESTION  -> 32 
  | COLON  -> 33 
  | CHAR  -> 34 
  | ELSE  -> 35 
  | IF  -> 36 
  | INT  -> 37 
  | FLOAT  -> 38 
  | NULL  -> 39 
  | PRINT  -> 40 
  | PRINTLN  -> 41 
  | RETURN  -> 42 
  | VOID  -> 43 
  | WHILE  -> 44 
  | FOR  -> 45 
  | STRING  -> 46 
  | BREAK  -> 47 
  | CONTINUE  -> 48 
  | DOWHILE  -> 49 
  | DO  -> 50 
  | CASE  -> 51 
  | SWITCH  -> 52 
  | DEFAULT  -> 53 
  | CSTSTRING _ -> 54 
  | NAME _ -> 55 
  | CSTCHAR _ -> 56 
  | CSTFLOAT _ -> 57 
  | CSTINT _ -> 58 
  | CSTBOOL _ -> 59 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_SELFPLUS 
  | 26 -> TOKEN_SELFMINUS 
  | 27 -> TOKEN_SELFTIMES 
  | 28 -> TOKEN_SELFDIV 
  | 29 -> TOKEN_SELFMOD 
  | 30 -> TOKEN_ADDONE 
  | 31 -> TOKEN_MINUSONE 
  | 32 -> TOKEN_QUESTION 
  | 33 -> TOKEN_COLON 
  | 34 -> TOKEN_CHAR 
  | 35 -> TOKEN_ELSE 
  | 36 -> TOKEN_IF 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_FLOAT 
  | 39 -> TOKEN_NULL 
  | 40 -> TOKEN_PRINT 
  | 41 -> TOKEN_PRINTLN 
  | 42 -> TOKEN_RETURN 
  | 43 -> TOKEN_VOID 
  | 44 -> TOKEN_WHILE 
  | 45 -> TOKEN_FOR 
  | 46 -> TOKEN_STRING 
  | 47 -> TOKEN_BREAK 
  | 48 -> TOKEN_CONTINUE 
  | 49 -> TOKEN_DOWHILE 
  | 50 -> TOKEN_DO 
  | 51 -> TOKEN_CASE 
  | 52 -> TOKEN_SWITCH 
  | 53 -> TOKEN_DEFAULT 
  | 54 -> TOKEN_CSTSTRING 
  | 55 -> TOKEN_NAME 
  | 56 -> TOKEN_CSTCHAR 
  | 57 -> TOKEN_CSTFLOAT 
  | 58 -> TOKEN_CSTINT 
  | 59 -> TOKEN_CSTBOOL 
  | 62 -> TOKEN_end_of_input
  | 60 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssignment 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_ExprNotAccess 
    | 76 -> NONTERM_ExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_AtExprNotAccess 
    | 81 -> NONTERM_AtExprNotAccess 
    | 82 -> NONTERM_AtExprNotAccess 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Access 
    | 86 -> NONTERM_Access 
    | 87 -> NONTERM_Access 
    | 88 -> NONTERM_Exprs 
    | 89 -> NONTERM_Exprs 
    | 90 -> NONTERM_StmtCase 
    | 91 -> NONTERM_StmtCase 
    | 92 -> NONTERM_StmtCase 
    | 93 -> NONTERM_Exprs1 
    | 94 -> NONTERM_Exprs1 
    | 95 -> NONTERM_ConstString 
    | 96 -> NONTERM_Const 
    | 97 -> NONTERM_Const 
    | 98 -> NONTERM_Const 
    | 99 -> NONTERM_Const 
    | 100 -> NONTERM_ConstFloat 
    | 101 -> NONTERM_ConstFloat 
    | 102 -> NONTERM_ConstChar 
    | 103 -> NONTERM_Type 
    | 104 -> NONTERM_Type 
    | 105 -> NONTERM_Type 
    | 106 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 62 
let _fsyacc_tagOfErrorTerminal = 60

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | SELFTIMES  -> "SELFTIMES" 
  | SELFDIV  -> "SELFDIV" 
  | SELFMOD  -> "SELFMOD" 
  | ADDONE  -> "ADDONE" 
  | MINUSONE  -> "MINUSONE" 
  | QUESTION  -> "QUESTION" 
  | COLON  -> "COLON" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | STRING  -> "STRING" 
  | BREAK  -> "BREAK" 
  | CONTINUE  -> "CONTINUE" 
  | DOWHILE  -> "DOWHILE" 
  | DO  -> "DO" 
  | CASE  -> "CASE" 
  | SWITCH  -> "SWITCH" 
  | DEFAULT  -> "DEFAULT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | SELFTIMES  -> (null : System.Object) 
  | SELFDIV  -> (null : System.Object) 
  | SELFMOD  -> (null : System.Object) 
  | ADDONE  -> (null : System.Object) 
  | MINUSONE  -> (null : System.Object) 
  | QUESTION  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 16us; 65535us; 33us; 34us; 37us; 38us; 43us; 74us; 46us; 74us; 49us; 74us; 52us; 74us; 67us; 74us; 81us; 74us; 82us; 74us; 84us; 74us; 85us; 74us; 93us; 74us; 94us; 74us; 110us; 74us; 212us; 74us; 215us; 74us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 82us; 113us; 14us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 67us; 68us; 81us; 83us; 82us; 55us; 84us; 86us; 85us; 86us; 93us; 95us; 94us; 95us; 110us; 111us; 212us; 213us; 215us; 216us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 82us; 56us; 85us; 112us; 94us; 114us; 57us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 67us; 57us; 70us; 71us; 77us; 80us; 78us; 79us; 81us; 57us; 82us; 57us; 84us; 57us; 85us; 57us; 89us; 92us; 90us; 91us; 93us; 57us; 94us; 57us; 97us; 98us; 104us; 105us; 106us; 107us; 108us; 109us; 110us; 57us; 120us; 121us; 123us; 171us; 126us; 127us; 128us; 129us; 130us; 168us; 132us; 133us; 141us; 142us; 143us; 144us; 145us; 146us; 147us; 148us; 149us; 150us; 174us; 152us; 175us; 153us; 176us; 154us; 177us; 155us; 178us; 156us; 179us; 157us; 180us; 158us; 181us; 159us; 182us; 160us; 183us; 161us; 184us; 162us; 185us; 163us; 186us; 164us; 187us; 165us; 188us; 166us; 189us; 167us; 190us; 169us; 193us; 168us; 194us; 168us; 207us; 170us; 212us; 57us; 215us; 57us; 218us; 171us; 57us; 65535us; 16us; 117us; 43us; 117us; 46us; 117us; 49us; 117us; 52us; 117us; 59us; 117us; 67us; 117us; 70us; 117us; 77us; 117us; 78us; 117us; 81us; 117us; 82us; 117us; 84us; 117us; 85us; 117us; 89us; 117us; 90us; 117us; 93us; 117us; 94us; 117us; 97us; 117us; 104us; 117us; 106us; 117us; 108us; 117us; 110us; 117us; 120us; 117us; 123us; 117us; 126us; 117us; 128us; 117us; 130us; 118us; 132us; 117us; 141us; 117us; 143us; 117us; 145us; 117us; 147us; 117us; 149us; 117us; 174us; 117us; 175us; 117us; 176us; 117us; 177us; 117us; 178us; 117us; 179us; 117us; 180us; 117us; 181us; 117us; 182us; 117us; 183us; 117us; 184us; 117us; 185us; 117us; 186us; 117us; 187us; 117us; 188us; 117us; 189us; 117us; 190us; 117us; 193us; 118us; 194us; 118us; 207us; 117us; 212us; 117us; 215us; 117us; 218us; 117us; 59us; 65535us; 16us; 119us; 43us; 119us; 46us; 119us; 49us; 119us; 52us; 119us; 59us; 119us; 67us; 119us; 70us; 119us; 77us; 119us; 78us; 119us; 81us; 119us; 82us; 119us; 84us; 119us; 85us; 119us; 89us; 119us; 90us; 119us; 93us; 119us; 94us; 119us; 97us; 119us; 104us; 119us; 106us; 119us; 108us; 119us; 110us; 119us; 120us; 119us; 123us; 119us; 126us; 119us; 128us; 119us; 130us; 119us; 132us; 119us; 141us; 119us; 143us; 119us; 145us; 119us; 147us; 119us; 149us; 119us; 174us; 119us; 175us; 119us; 176us; 119us; 177us; 119us; 178us; 119us; 179us; 119us; 180us; 119us; 181us; 119us; 182us; 119us; 183us; 119us; 184us; 119us; 185us; 119us; 186us; 119us; 187us; 119us; 188us; 119us; 189us; 119us; 190us; 119us; 193us; 119us; 194us; 119us; 204us; 206us; 207us; 119us; 210us; 211us; 212us; 119us; 215us; 119us; 218us; 119us; 62us; 65535us; 16us; 116us; 43us; 116us; 46us; 116us; 49us; 116us; 52us; 116us; 59us; 116us; 67us; 116us; 70us; 116us; 77us; 116us; 78us; 116us; 81us; 116us; 82us; 116us; 84us; 116us; 85us; 116us; 89us; 116us; 90us; 116us; 93us; 116us; 94us; 116us; 97us; 116us; 104us; 116us; 106us; 116us; 108us; 116us; 110us; 116us; 120us; 116us; 123us; 116us; 126us; 116us; 128us; 116us; 130us; 115us; 132us; 116us; 137us; 138us; 139us; 140us; 141us; 116us; 143us; 116us; 145us; 116us; 147us; 116us; 149us; 116us; 174us; 116us; 175us; 116us; 176us; 116us; 177us; 116us; 178us; 116us; 179us; 116us; 180us; 116us; 181us; 116us; 182us; 116us; 183us; 116us; 184us; 116us; 185us; 116us; 186us; 116us; 187us; 116us; 188us; 116us; 189us; 116us; 190us; 116us; 193us; 116us; 194us; 115us; 198us; 199us; 201us; 202us; 204us; 205us; 207us; 116us; 212us; 116us; 215us; 116us; 218us; 116us; 1us; 65535us; 123us; 124us; 2us; 65535us; 100us; 101us; 213us; 217us; 2us; 65535us; 123us; 209us; 218us; 219us; 59us; 65535us; 16us; 197us; 43us; 197us; 46us; 197us; 49us; 197us; 52us; 197us; 59us; 197us; 67us; 197us; 70us; 197us; 77us; 197us; 78us; 197us; 81us; 197us; 82us; 197us; 84us; 197us; 85us; 197us; 89us; 197us; 90us; 197us; 93us; 197us; 94us; 197us; 97us; 197us; 104us; 197us; 106us; 197us; 108us; 197us; 110us; 197us; 120us; 197us; 123us; 197us; 126us; 197us; 128us; 197us; 130us; 197us; 132us; 197us; 141us; 197us; 143us; 197us; 145us; 197us; 147us; 197us; 149us; 197us; 174us; 197us; 175us; 197us; 176us; 197us; 177us; 197us; 178us; 197us; 179us; 197us; 180us; 197us; 181us; 197us; 182us; 197us; 183us; 197us; 184us; 197us; 185us; 197us; 186us; 197us; 187us; 197us; 188us; 197us; 189us; 197us; 190us; 197us; 193us; 197us; 194us; 197us; 204us; 197us; 207us; 197us; 210us; 197us; 212us; 197us; 215us; 197us; 218us; 197us; 59us; 65535us; 16us; 191us; 43us; 191us; 46us; 191us; 49us; 191us; 52us; 191us; 59us; 191us; 67us; 191us; 70us; 191us; 77us; 191us; 78us; 191us; 81us; 191us; 82us; 191us; 84us; 191us; 85us; 191us; 89us; 191us; 90us; 191us; 93us; 191us; 94us; 191us; 97us; 191us; 104us; 191us; 106us; 191us; 108us; 191us; 110us; 191us; 120us; 191us; 123us; 191us; 126us; 191us; 128us; 191us; 130us; 191us; 132us; 191us; 141us; 191us; 143us; 191us; 145us; 191us; 147us; 191us; 149us; 191us; 174us; 191us; 175us; 191us; 176us; 191us; 177us; 191us; 178us; 191us; 179us; 191us; 180us; 191us; 181us; 191us; 182us; 191us; 183us; 191us; 184us; 191us; 185us; 191us; 186us; 191us; 187us; 191us; 188us; 191us; 189us; 191us; 190us; 191us; 193us; 191us; 194us; 191us; 204us; 191us; 207us; 191us; 210us; 191us; 212us; 191us; 215us; 191us; 218us; 191us; 59us; 65535us; 16us; 192us; 43us; 192us; 46us; 192us; 49us; 192us; 52us; 192us; 59us; 192us; 67us; 192us; 70us; 192us; 77us; 192us; 78us; 192us; 81us; 192us; 82us; 192us; 84us; 192us; 85us; 192us; 89us; 192us; 90us; 192us; 93us; 192us; 94us; 192us; 97us; 192us; 104us; 192us; 106us; 192us; 108us; 192us; 110us; 192us; 120us; 192us; 123us; 192us; 126us; 192us; 128us; 192us; 130us; 192us; 132us; 192us; 141us; 192us; 143us; 192us; 145us; 192us; 147us; 192us; 149us; 192us; 174us; 192us; 175us; 192us; 176us; 192us; 177us; 192us; 178us; 192us; 179us; 192us; 180us; 192us; 181us; 192us; 182us; 192us; 183us; 192us; 184us; 192us; 185us; 192us; 186us; 192us; 187us; 192us; 188us; 192us; 189us; 192us; 190us; 192us; 193us; 192us; 194us; 192us; 204us; 192us; 207us; 192us; 210us; 192us; 212us; 192us; 215us; 192us; 218us; 192us; 59us; 65535us; 16us; 196us; 43us; 196us; 46us; 196us; 49us; 196us; 52us; 196us; 59us; 196us; 67us; 196us; 70us; 196us; 77us; 196us; 78us; 196us; 81us; 196us; 82us; 196us; 84us; 196us; 85us; 196us; 89us; 196us; 90us; 196us; 93us; 196us; 94us; 196us; 97us; 196us; 104us; 196us; 106us; 196us; 108us; 196us; 110us; 196us; 120us; 196us; 123us; 196us; 126us; 196us; 128us; 196us; 130us; 196us; 132us; 196us; 141us; 196us; 143us; 196us; 145us; 196us; 147us; 196us; 149us; 196us; 174us; 196us; 175us; 196us; 176us; 196us; 177us; 196us; 178us; 196us; 179us; 196us; 180us; 196us; 181us; 196us; 182us; 196us; 183us; 196us; 184us; 196us; 185us; 196us; 186us; 196us; 187us; 196us; 188us; 196us; 189us; 196us; 190us; 196us; 193us; 196us; 194us; 196us; 204us; 196us; 207us; 196us; 210us; 196us; 212us; 196us; 215us; 196us; 218us; 196us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 59us; 64us; 70us; 85us; 93us; 151us; 209us; 269us; 332us; 334us; 337us; 340us; 400us; 460us; 520us; 580us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 17us; 8us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 34us; 38us; 1us; 26us; 17us; 27us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 17us; 29us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 17us; 32us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 34us; 3us; 34us; 38us; 39us; 1us; 34us; 3us; 34us; 38us; 39us; 19us; 34us; 38us; 39us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 34us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 34us; 3us; 34us; 38us; 39us; 1us; 34us; 1us; 34us; 2us; 34us; 38us; 1us; 34us; 1us; 35us; 2us; 35us; 40us; 1us; 35us; 2us; 35us; 40us; 18us; 35us; 40us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 35us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 35us; 2us; 35us; 40us; 1us; 35us; 1us; 36us; 1us; 36us; 17us; 36us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 17us; 37us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 37us; 17us; 37us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 37us; 17us; 37us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 11us; 41us; 44us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 84us; 87us; 10us; 41us; 44us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 87us; 1us; 42us; 2us; 42us; 79us; 1us; 43us; 1us; 44us; 17us; 44us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 2us; 45us; 83us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 17us; 46us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 2us; 47us; 48us; 17us; 47us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 3us; 48us; 79us; 84us; 2us; 48us; 95us; 1us; 48us; 17us; 48us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 2us; 51us; 87us; 1us; 52us; 2us; 52us; 87us; 1us; 53us; 17us; 53us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 54us; 17us; 54us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 55us; 17us; 55us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 56us; 17us; 56us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 57us; 17us; 57us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 1us; 58us; 17us; 59us; 60us; 61us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 75us; 76us; 16us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 76us; 17us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 87us; 18us; 59us; 60us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 93us; 94us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 2us; 79us; 84us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 2us; 82us; 87us; 1us; 83us; 1us; 84us; 2us; 84us; 87us; 1us; 84us; 2us; 85us; 86us; 2us; 85us; 87us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 89us; 2us; 90us; 92us; 2us; 90us; 92us; 2us; 90us; 92us; 2us; 90us; 92us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 2us; 98us; 101us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 102us; 1us; 103us; 1us; 104us; 1us; 105us; 1us; 106us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 60us; 62us; 65us; 67us; 71us; 73us; 77us; 79us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 110us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 145us; 147us; 165us; 167us; 170us; 172us; 190us; 192us; 194us; 196us; 198us; 200us; 202us; 204us; 206us; 208us; 226us; 228us; 230us; 232us; 234us; 238us; 240us; 244us; 264us; 282us; 284us; 288us; 290us; 292us; 295us; 297us; 299us; 302us; 304us; 307us; 326us; 344us; 346us; 349us; 351us; 353us; 355us; 373us; 375us; 377us; 379us; 381us; 383us; 385us; 403us; 405us; 423us; 425us; 443us; 445us; 447us; 449us; 451us; 453us; 465us; 476us; 478us; 481us; 483us; 485us; 503us; 506us; 508us; 510us; 512us; 514us; 532us; 535us; 553us; 557us; 560us; 562us; 580us; 582us; 584us; 586us; 588us; 591us; 593us; 596us; 598us; 616us; 618us; 636us; 638us; 656us; 658us; 676us; 678us; 696us; 698us; 716us; 734us; 752us; 770us; 788us; 806us; 824us; 842us; 860us; 878us; 896us; 914us; 932us; 950us; 968us; 986us; 1003us; 1021us; 1039us; 1058us; 1060us; 1062us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1090us; 1092us; 1094us; 1096us; 1098us; 1100us; 1102us; 1105us; 1107us; 1109us; 1111us; 1113us; 1116us; 1118us; 1120us; 1123us; 1125us; 1128us; 1131us; 1133us; 1135us; 1137us; 1139us; 1142us; 1145us; 1148us; 1151us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; 1167us; 1169us; 1172us; 1174us; 1176us; 1178us; 1180us; 1182us; 1184us; 1186us; 1188us; |]
let _fsyacc_action_rows = 233
let _fsyacc_actionTableElements = [|5us; 16386us; 34us; 230us; 37us; 229us; 38us; 232us; 43us; 29us; 46us; 231us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 5us; 16386us; 34us; 230us; 37us; 229us; 38us; 232us; 43us; 29us; 46us; 231us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 22us; 22us; 20us; 55us; 18us; 3us; 32768us; 1us; 22us; 22us; 20us; 55us; 18us; 3us; 32768us; 1us; 22us; 22us; 20us; 55us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 16us; 16392us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 22us; 20us; 55us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 22us; 20us; 55us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 58us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 55us; 30us; 1us; 32768us; 1us; 31us; 4us; 16400us; 34us; 230us; 37us; 229us; 38us; 232us; 46us; 231us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 4us; 16400us; 34us; 230us; 37us; 229us; 38us; 232us; 46us; 231us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 4us; 32768us; 34us; 230us; 37us; 229us; 38us; 232us; 46us; 231us; 0us; 16403us; 31us; 16405us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 34us; 230us; 36us; 76us; 37us; 229us; 38us; 232us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 88us; 45us; 103us; 46us; 231us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 32768us; 4us; 45us; 0us; 16404us; 31us; 16405us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 34us; 230us; 36us; 76us; 37us; 229us; 38us; 232us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 88us; 45us; 103us; 46us; 231us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16406us; 1us; 32768us; 7us; 49us; 31us; 16405us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 34us; 230us; 36us; 76us; 37us; 229us; 38us; 232us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 88us; 45us; 103us; 46us; 231us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16407us; 1us; 32768us; 7us; 52us; 31us; 16405us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 34us; 230us; 36us; 76us; 37us; 229us; 38us; 232us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 88us; 45us; 103us; 46us; 231us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 35us; 85us; 0us; 16410us; 17us; 32768us; 7us; 58us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 0us; 16411us; 19us; 32768us; 1us; 194us; 7us; 60us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16412us; 17us; 32768us; 7us; 62us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 0us; 16413us; 1us; 32768us; 7us; 64us; 0us; 16414us; 1us; 32768us; 7us; 66us; 0us; 16415us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 75us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 87us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 32768us; 44us; 69us; 1us; 32768us; 1us; 70us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 2us; 72us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 1us; 32768us; 7us; 73us; 0us; 16416us; 0us; 16417us; 1us; 32768us; 1us; 77us; 1us; 32768us; 1us; 78us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 2us; 82us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 17us; 32768us; 2us; 81us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 75us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 87us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 76us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 88us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 32768us; 35us; 84us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 75us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 87us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 76us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 88us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16418us; 1us; 32768us; 1us; 89us; 1us; 32768us; 1us; 90us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 2us; 94us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 17us; 32768us; 2us; 93us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 75us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 87us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 76us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 88us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16419us; 1us; 32768us; 1us; 97us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 2us; 99us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 1us; 32768us; 3us; 100us; 2us; 32768us; 51us; 210us; 53us; 214us; 1us; 32768us; 4us; 102us; 0us; 16420us; 1us; 32768us; 1us; 104us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 7us; 106us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 7us; 108us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 2us; 110us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 75us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 87us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 10us; 16425us; 2us; 203us; 5us; 207us; 9us; 120us; 25us; 145us; 26us; 147us; 27us; 141us; 28us; 143us; 29us; 149us; 30us; 135us; 31us; 136us; 9us; 16425us; 5us; 207us; 9us; 120us; 25us; 145us; 26us; 147us; 27us; 141us; 28us; 143us; 29us; 149us; 30us; 135us; 31us; 136us; 0us; 16426us; 1us; 16426us; 2us; 195us; 0us; 16427us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 16us; 16428us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 1us; 16467us; 1us; 123us; 18us; 16472us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 32768us; 2us; 125us; 0us; 16429us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16430us; 18us; 32768us; 1us; 130us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 16us; 16431us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 131us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 16479us; 8us; 132us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 17us; 32768us; 2us; 134us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 0us; 16432us; 0us; 16433us; 0us; 16434us; 3us; 32768us; 1us; 201us; 22us; 204us; 55us; 200us; 1us; 16435us; 5us; 207us; 3us; 32768us; 1us; 201us; 22us; 204us; 55us; 200us; 1us; 16436us; 5us; 207us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 16437us; 32us; 187us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 16438us; 32us; 187us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 16439us; 32us; 187us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 16440us; 32us; 187us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 16441us; 32us; 187us; 0us; 16442us; 1us; 16445us; 32us; 187us; 1us; 16446us; 32us; 187us; 6us; 16447us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 6us; 16448us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 3us; 16449us; 25us; 172us; 26us; 173us; 32us; 187us; 3us; 16450us; 25us; 172us; 26us; 173us; 32us; 187us; 3us; 16451us; 25us; 172us; 26us; 173us; 32us; 187us; 12us; 16452us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 12us; 16453us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 12us; 16454us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 12us; 16455us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 12us; 16456us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 12us; 16457us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 17us; 32768us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 33us; 188us; 0us; 16458us; 14us; 16459us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 16us; 32768us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 15us; 16460us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 17us; 32768us; 6us; 208us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 17us; 16477us; 8us; 218us; 12us; 190us; 13us; 189us; 14us; 181us; 15us; 182us; 16us; 183us; 17us; 184us; 18us; 185us; 19us; 186us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 172us; 26us; 173us; 32us; 187us; 0us; 16443us; 0us; 16444us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16461us; 0us; 16462us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 3us; 32768us; 1us; 201us; 22us; 204us; 55us; 200us; 1us; 16466us; 5us; 207us; 0us; 16467us; 3us; 32768us; 1us; 201us; 22us; 204us; 55us; 200us; 2us; 32768us; 2us; 203us; 5us; 207us; 0us; 16468us; 11us; 32768us; 1us; 194us; 10us; 198us; 21us; 223us; 22us; 204us; 39us; 225us; 54us; 220us; 55us; 200us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 16469us; 5us; 207us; 0us; 16470us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16471us; 0us; 16473us; 9us; 32768us; 1us; 193us; 10us; 198us; 21us; 223us; 39us; 225us; 54us; 220us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 1us; 32768us; 33us; 212us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 75us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 87us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 2us; 16474us; 51us; 210us; 53us; 214us; 1us; 32768us; 33us; 215us; 27us; 32768us; 1us; 194us; 3us; 43us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 36us; 75us; 39us; 225us; 40us; 128us; 41us; 151us; 42us; 59us; 44us; 87us; 45us; 103us; 47us; 63us; 48us; 65us; 50us; 67us; 52us; 96us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16475us; 0us; 16476us; 18us; 32768us; 1us; 194us; 10us; 198us; 11us; 126us; 21us; 223us; 22us; 204us; 25us; 174us; 26us; 175us; 30us; 137us; 31us; 139us; 39us; 225us; 40us; 128us; 41us; 151us; 54us; 220us; 55us; 122us; 56us; 228us; 57us; 226us; 58us; 221us; 59us; 222us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 2us; 32768us; 57us; 227us; 58us; 224us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; 0us; 16486us; 0us; 16487us; 0us; 16488us; 0us; 16489us; 0us; 16490us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 6us; 7us; 9us; 10us; 16us; 17us; 19us; 20us; 21us; 23us; 24us; 28us; 32us; 36us; 39us; 41us; 60us; 77us; 78us; 80us; 84us; 86us; 90us; 93us; 94us; 97us; 98us; 100us; 101us; 103us; 105us; 110us; 112us; 114us; 115us; 120us; 122us; 124us; 125us; 126us; 128us; 133us; 134us; 166us; 168us; 169us; 201us; 202us; 204us; 236us; 237us; 239us; 271us; 272us; 273us; 275us; 276us; 294us; 295us; 315us; 316us; 334us; 335us; 337us; 338us; 340us; 341us; 369us; 371us; 373us; 392us; 410us; 412us; 413us; 414us; 416us; 418us; 437us; 456us; 474us; 492us; 520us; 548us; 550us; 578us; 606us; 607us; 609us; 611us; 630us; 649us; 667us; 685us; 713us; 741us; 742us; 744us; 763us; 781us; 783us; 786us; 788us; 789us; 791us; 810us; 828us; 847us; 865us; 884us; 902us; 930us; 931us; 932us; 933us; 934us; 945us; 955us; 956us; 958us; 959us; 978us; 995us; 997us; 1016us; 1018us; 1019us; 1038us; 1039us; 1058us; 1075us; 1094us; 1096us; 1115us; 1133us; 1134us; 1135us; 1136us; 1140us; 1142us; 1146us; 1148us; 1167us; 1169us; 1188us; 1190us; 1209us; 1211us; 1230us; 1232us; 1251us; 1253us; 1254us; 1256us; 1258us; 1265us; 1272us; 1276us; 1280us; 1284us; 1297us; 1310us; 1323us; 1336us; 1349us; 1362us; 1380us; 1381us; 1396us; 1413us; 1429us; 1447us; 1465us; 1466us; 1467us; 1486us; 1505us; 1524us; 1543us; 1562us; 1581us; 1600us; 1619us; 1638us; 1657us; 1676us; 1695us; 1714us; 1733us; 1752us; 1771us; 1790us; 1791us; 1792us; 1811us; 1830us; 1831us; 1832us; 1833us; 1837us; 1839us; 1840us; 1844us; 1847us; 1848us; 1860us; 1862us; 1863us; 1882us; 1883us; 1884us; 1894us; 1896us; 1924us; 1927us; 1929us; 1957us; 1958us; 1959us; 1978us; 1979us; 1980us; 1981us; 1982us; 1985us; 1986us; 1987us; 1988us; 1989us; 1990us; 1991us; 1992us; 1993us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 2us; 2us; 7us; 1us; 7us; 5us; 7us; 9us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 6us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 4us; 3us; 5us; 1us; 3us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 25us; 26us; 26us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 16433us; 16434us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16443us; 16444us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16461us; 16462us; 65535us; 65535us; 16463us; 16464us; 16465us; 65535us; 65535us; 16467us; 65535us; 65535us; 16468us; 65535us; 65535us; 16470us; 65535us; 16471us; 16473us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16475us; 16476us; 65535us; 16478us; 16479us; 16480us; 16481us; 65535us; 16482us; 16483us; 16484us; 16485us; 16486us; 16487us; 16488us; 16489us; 16490us; |]
let _fsyacc_reductions ()  =    [| 
# 566 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               Prog _1 
                   )
# 51 "CPar.fsy"
                 : Absyn.program));
# 586 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               [] 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 596 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 608 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 619 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               _1 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 630 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               VardecAndAssignment (first _1, second _1 ,third _1)  
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 641 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 81 "CPar.fsy"
                 : 'gentype_Vardec));
# 653 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "CPar.fsy"
                                                     ((fst _2) _1, snd _2 , _4) 
                   )
# 90 "CPar.fsy"
                 : 'gentype_VardecAndAssignment));
# 666 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 677 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 688 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               _2                                      
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 699 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 710 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 109 "CPar.fsy"
                 : 'gentype_Vardesc));
# 722 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Fundec));
# 735 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 116 "CPar.fsy"
                 : 'gentype_Fundec));
# 749 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               [] 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 759 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               _1 
                   )
# 122 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 770 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               [_1]     
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 127 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 793 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Block _2 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Block));
# 804 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               [] 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 814 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 826 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 838 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssignment in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                                  DecAndAssign (first _1, second _1, third _1) :: _3 
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 850 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               _1 
                   )
# 143 "CPar.fsy"
                 : 'gentype_Stmt));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               _1 
                   )
# 144 "CPar.fsy"
                 : 'gentype_Stmt));
# 872 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 883 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               Myctrl (Return None)          
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 893 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               Myctrl(Return(Some(_2)))     
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 904 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               Myctrl Break         
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 914 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               Myctrl Continue      
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 924 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 936 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               _1                   
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 947 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 960 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                                               Switch(_3,_6)  
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 984 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                                        For(_3,_5,_7,_9)  
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 998 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtU));
# 1011 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 163 "CPar.fsy"
                 : 'gentype_StmtU));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtU));
# 1035 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Access _1           
                   )
# 168 "CPar.fsy"
                 : 'gentype_Expr));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1                  
                   )
# 169 "CPar.fsy"
                 : 'gentype_Expr));
# 1057 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               _1                  
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1068 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1080 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1092 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1103 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Print(_3 , _5)      
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               SimpleOpt("Z++", _1, CstI 1 )   
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1137 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               SimpleOpt("Z--", _1, CstI 1 )   
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1148 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               SimpleOpt("++Z", _2, CstI 1 )   
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1159 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               SimpleOpt("--Z", _2, CstI 1 )   
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1170 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               SimpleOpt("*=", _1, _3 ) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1182 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               SimpleOpt("/=", _1, _3 ) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1194 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               SimpleOpt("+=", _1, _3 ) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1206 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               SimpleOpt("-=", _1, _3 ) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1218 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               SimpleOpt("%=", _1, _3 ) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1230 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1240 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim1("W++", _1)     
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1251 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim1("W--", _1)     
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1262 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim1("++W", _2)     
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1273 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim1("--W", _2)     
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1284 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1296 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1308 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1320 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1332 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1344 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1356 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1368 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1380 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1404 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1416 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1429 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1441 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1453 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               CstI _1             
                   )
# 214 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1464 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               ConstFloat(_1)      
                   )
# 215 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1475 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               _2                  
                   )
# 216 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1486 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               ConstChar (_1)      
                   )
# 217 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1497 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               ConstString(_1)     
                   )
# 218 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               Addr _2             
                   )
# 219 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               AccVar _1           
                   )
# 223 "CPar.fsy"
                 : 'gentype_Access));
# 1530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _2                  
                   )
# 224 "CPar.fsy"
                 : 'gentype_Access));
# 1541 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 225 "CPar.fsy"
                 : 'gentype_Access));
# 1552 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 226 "CPar.fsy"
                 : 'gentype_Access));
# 1563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 227 "CPar.fsy"
                 : 'gentype_Access));
# 1575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               []       
                   )
# 231 "CPar.fsy"
                 : 'gentype_Exprs));
# 1585 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               _1       
                   )
# 232 "CPar.fsy"
                 : 'gentype_Exprs));
# 1596 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 236 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1608 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                                          [Default(_3)]    
                   )
# 237 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1619 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 238 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1632 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               [_1]     
                   )
# 242 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 243 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1655 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               _1       
                   )
# 247 "CPar.fsy"
                 : 'gentype_ConstString));
# 1666 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                               _1       
                   )
# 251 "CPar.fsy"
                 : 'gentype_Const));
# 1677 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                               _1       
                   )
# 252 "CPar.fsy"
                 : 'gentype_Const));
# 1688 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               - _2     
                   )
# 253 "CPar.fsy"
                 : 'gentype_Const));
# 1699 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               -1       
                   )
# 254 "CPar.fsy"
                 : 'gentype_Const));
# 1709 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CPar.fsy"
                                                               _1       
                   )
# 258 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1720 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "CPar.fsy"
                                                               - _2     
                   )
# 259 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1731 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 "CPar.fsy"
                                                               _1       
                   )
# 263 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1742 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "CPar.fsy"
                                                               TypI     
                   )
# 266 "CPar.fsy"
                 : 'gentype_Type));
# 1752 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "CPar.fsy"
                                                               TypC     
                   )
# 267 "CPar.fsy"
                 : 'gentype_Type));
# 1762 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "CPar.fsy"
                                                               TypS     
                   )
# 268 "CPar.fsy"
                 : 'gentype_Type));
# 1772 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "CPar.fsy"
                                                               TypeFloat    
                   )
# 269 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1783 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 63;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
